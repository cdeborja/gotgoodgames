exit
@review_count
c
@review_count
c
@review_count
exit
xit
4.fdiv(3)
4.to_f/3
4.to_f
4.00/3.00
4/3 * 1.00
4/3
average
exit
c
exit
review
exit
game.reviews
game
c
@average
exit
average
exit
xit
exit
xit
exit
review.user.username
review.user
user
json.id
exit
review.user.id
json.id
user
c
average_rating
exit
average_rating.to_s
average_rating
c
exit
c
@score
exit
c
@review_count
@score
exit
id
user
exit
xit
review.user.id
json.id
json.user
user
c
@review_count
@score
@score/@review_count
json.average_rating 
exit
c
@score
@review_count
c
@review_count
@score
exit
c
@review_count
review.score
@review_count = @review_count + 1
@review_count
review
c
review_count
@review_count
@score
@game
c
json.reviews
exit
c
review.score
review
c
game.reviews
json.reviews
exit
json.reviews
c
json.reviews
json
exit
json.reviews
json.extract!(game, :id)
exit
show_reviews
game
exit
c
game.reviews.first.score
game.reviews.first
game.reviews
game
c
recent_activity.to_s
recent_activity = user.reviews.last.updated_at
updated =_
user.reviews.last.updated_at
user.reviews.last
user.reviews.last.game_id
c
user.reviews.last.game_id.title
user.reviews.last.game_id.name
user.reviews.last.game_id
gameId =_
user.reviews.last.game_id
user.reviews.last
c
Game.find(45)
user.reviews.last.game_id
user.reviews.last
user.reviews
user
c
user
c
five_users.first.picture.url
five_users.first.picture
five_users.first
top_five.first
topFive.first["picture"].url
topFive.first["picture".url
topFive.first["picture"]
topFive.first["username"]
topFive.first
topFive[picture]
topFive
topFive.first.picture
topFive.first
topFive
five_users.first
five_users
c
five_users.first.picture
five_users.first
five_users
c
five_users.first
five_users
c
topFive
c
topFive
topFive[user.username] = user.reviews.length
topFive
user
c
five_users.first.reviews.length
five_users.first.reviews
five_users.first.username
five_users.first
five_users
c
User.allc
User.all
User.username
User.all.username
user.username
user = User.first
user = Users.first
User.select(:username)
User.select(:usernamE)
User.all
User.all.selec
User.select(:username).all
c
User.select(:id)c
User.select(:id)
User.find_by_sql(:conditions => ["SELECT * FROM users"])
User.find_by_sql(:conditions => ["SELECT u*sername FROM users"])
User.find_by_sql(:conditions => ["SELECT username FROM users"])
User.find_by_sql(:conditions => ["SELECT username FROM users", id])
User.find_by_sql(:conditions => ["SELECT username FROM users"])
User.find_by_sql(:conditions => ["SELECT username FROM users
User.find(:select => "id")
User.find("id, username")
User.find(:select => "id, username")
User.select(:id)
User.select(:id))
User.select(:id).map(&:id)
User.select(:id).all
User.select(:id)
User.select(id)
User.select(:username)
User.all
User.select("id").all
User.select("username").all
user.select("name")
user.selecT("name")
user = User.first
five_users.first.select("username")
five_users.first.select(username)
five_users.first
five_users.first.select(:username)
five_users.first.reviews
five_users
c
User.joins(:reviews).group("id").order("COUNT(users.id) DESC").limit(5)
params
c
User.joins(:reviews).group("id").order("COUNT(users.id) DESC").limit(5)
User.joins(:reviews).group("id").order("COUNT(users.id) DESC")
User.joins(:reviews).group("id").order("COUNT(user.id) DESC")
User.joins(:reviews).group("id").order("COUNT(*) DESC")
User.joins(:reviews).group("id").order("COUNT id DESC")
User.joins(:reviews).group("id").order("COUNT("id") DESC")
User.joins(:reviews).group("id").order("COUNT(id) DESC")
User.joins(:reviews).group("id").length
User.joins(:reviews).group("id").count
User.joins(:reviews).group("id")
User.find_by("user
User.find_by("username")
User.find_by(username)
User.find_by("sonic")
User.find("sonic")
User.joins(:reviews).group("id")
User.joins(:reviews).group("id").first
User.joins(:reviews).group("id")
User.joins(:reviews).group("id)
User.joins(:reviews).order(:reviews)
User.joins(:reviews).first(5)
User.joins(:reviews)
User.all.order(:user.reviews.length)
User.all
User.first(3).reviews
User.first(3)
User.find(1).reviews.length
User.find(1).reviews
User.find(1)
User.find_by(1)
User.where(:id == 1)
User.where(:id = 1)
User.where(id = 1)
User.find(:joins=> review)
User.find(:joins=> reviews)
User.find(:all)
User.where(:username.reviews < 3)
User.where(User.reviews < 3)
